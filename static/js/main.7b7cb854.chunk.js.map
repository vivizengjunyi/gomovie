{"version":3,"sources":["globals/globalVariables.js","components/Slider.js","components/Nav.js","components/Header.js","components/Footer.js","components/NavSort.js","images/no-image.jpeg","store/globalAppState.js","components/MovieCard.js","components/Movies.js","pages/PageHome.js","pages/PageAbout.js","pages/PageFavs.js","pages/PageSearch.js","images/no-photo.jpeg","components/SingleMovie.js","pages/PageSingleMovie.js","routers/AppRouter.js","index.js"],"names":["API_TOKEN","Slider","useState","singleSliderMovies","setSingleSliderMovies","useEffect","a","fetch","headers","res","json","rawMovieData","results","splice","fecthMovies","current","setCurrent","length","timeout","useRef","setTimeout","clearTimeout","nextSlide","e","preventDefault","preSlide","Array","isArray","className","map","singleSliderMovie","index","to","id","style","backgroundImage","backdrop_path","src","poster_path","alt","title","onClick","Nav","toggle","show","showSearch","setShowSearch","searchKey","setSearchKey","refInput","history","useHistory","handleClick","search","trim","push","focus","type","ref","onChange","target","value","onKeyDown","key","Header","location","useLocation","burgerMenuShow","setBurgerMenuShow","pathname","indexOf","class","Footer","tabs","text","categoryId","backgrounds","popular","top_rated","now_playing","upcoming","NavSort","tab","appStorageName","getFavs","favsFromStorage","localStorage","getItem","JSON","parse","actions","addFav","objMovie","favs","find","fav","newFavsForStorage","stringify","from","Set","setItem","removeFav","filter","favsForStorage","MovieCard","movieObj","onUpdate","showDetail","globalAppState","setFavs","arr","handleSetFavs","isFave","some","item","noImage","release_date","vote_average","overview","Movies","movieData","oneMovie","i","PageHome","useParams","setMovieData","fetchMovies","PageAbout","PageFavs","PageSearch","URLSearchParams","get","getSearch","setSearchResult","searchResult","SingleMovie","movieReview","fecthReview","reviews","setReviews","currentPage","setCurrentPage","totalPage","setTotalPage","totalSize","setTotalSize","currentShowSize","setCurrentShowSize","video","setVideo","similar","page","total_pages","total_results","getReviewAvatar","review","avatar","author_details","avatar_path","substr","rawVideoData","fetchMoviesVideo","genres","singleGenres","name","tagline","credits","cast","slice","profile_path","noPhoto","character","frameBorder","allow","allowFullScreen","contenteditable","author","content","href","url","Date","created_at","toLocaleDateString","Math","min","singleSimilar","PageSingleMovie","setMovieReview","fecthMovie","rawMovieReview","AppRouter","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b7cb854.chunk.js","sourcesContent":["// Global Variables\nexport const API_KEY = '17d87095f2cdce0db3600b9659b0c621';\nexport const API_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxN2Q4NzA5NWYyY2RjZTBkYjM2MDBiOTY1OWIwYzYyMSIsInN1YiI6IjYxMWJlNzAzNGEwYjE5MDA0NWM2MmQ4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.I7bffZOYQCup48LfeLOQlzxYv0_EjSugb6lVmRglJ10';\n\n//App titile\nexport const title = 'GoMovie';","import { useEffect, useState, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { API_TOKEN } from '../globals/globalVariables';\nimport { IoArrowBackCircle, IoArrowForwardCircle } from 'react-icons/io5';\n\nconst Slider = () => {\n\n    const [singleSliderMovies, setSingleSliderMovies] = useState([]);\n\n    useEffect(() => {\n\n        const fecthMovies = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=<<api_key>>&language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + API_TOKEN\n                }\n            });\n\n            let rawMovieData = await res.json();\n            rawMovieData = rawMovieData.results.splice(0, 4);\n            setSingleSliderMovies(rawMovieData);\n        }\n\n        fecthMovies();\n\n    }, []);\n\n    const [current, setCurrent] = useState(0);\n    const length = singleSliderMovies.length;\n    const timeout = useRef(null);\n\n    useEffect(() => {\n        const nextSlide = () => {\n            setCurrent(current => (current === length - 1 ? 0 : current + 1));\n        }\n        timeout.current = setTimeout(nextSlide, 5000);\n\n        return function () {\n            if (timeout.current) {\n                clearTimeout(timeout.current);\n            }\n        }\n\n    }, [current, length]);\n\n    const nextSlide = (e) => {\n        e.preventDefault();\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n\n        setCurrent(current === length - 1 ? 0 : current + 1);\n\n    }\n\n    const preSlide = (e) => {\n        e.preventDefault();\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n        setCurrent(current === 0 ? length - 1 : current - 1);\n    }\n\n    if (!Array.isArray(singleSliderMovies) || length <= 0) {\n        return null;\n    }\n\n    return (\n        <div className='outerContainer'>\n            {singleSliderMovies.map((singleSliderMovie, index) => (\n                index === current && (\n                    <div className='sliderWrapper'>\n                        <Link to={`/gomovie/movie/${singleSliderMovie.id}`}>\n                            <div key={index} className='sliderContainer' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original/${singleSliderMovie.backdrop_path})` }}>\n                                <img src={'https://image.tmdb.org/t/p/w500/' + singleSliderMovie.poster_path} alt={singleSliderMovie.title} className=\"slider-img\" />\n                                <div className=\"slider-title\">{singleSliderMovie.title}</div>\n                                <IoArrowBackCircle onClick={preSlide} className='back' />\n                                <IoArrowForwardCircle onClick={nextSlide} className='next' />\n                            </div>\n                        </Link>\n                    </div>\n                )\n            ))}\n        </div>\n    )\n\n}\n\n//\n\n//\nexport default Slider","import { NavLink, useHistory } from \"react-router-dom\";\nimport { FaSearch } from 'react-icons/fa';\nimport { useRef, useState } from \"react\";\n\nconst Nav = ({ toggle, show = false }) => {\n    const [showSearch, setShowSearch] = useState(false)\n    const [searchKey, setSearchKey] = useState('')\n    const refInput = useRef(null)\n    const history = useHistory();\n    const handleClick = toggle || (() => { })\n    const search = () => {\n        if (!showSearch) {\n            setShowSearch(true);\n            setTimeout(() => refInput.current.focus())\n        } else {\n            if (searchKey.trim() === '') {\n                setShowSearch(false);\n            } else {\n                history.push(\"/search?query=\" + searchKey);\n            }\n        }\n    }\n    return (\n        <nav className={`dropdownMenu ${show ? 'show-nav' : ''}`}>\n            <ul>\n                <li>\n                    <NavLink to=\"/\" onClick={handleClick}>Home</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/favs\" onClick={handleClick}>Favs</NavLink>\n\n                </li>\n                <li>\n                    <NavLink to=\"/about\" onClick={handleClick}>About</NavLink>\n                </li>\n\n                <li className=\"search\">\n                    {\n                        showSearch && \n                            <input \n                                type=\"text\" \n                                ref={refInput} \n                                onChange={e => setSearchKey(e.target.value)} \n                                onKeyDown={e => e.key === 'Enter' && search()}\n                                />\n                    }\n                    <FaSearch className='search-icon' onClick={search} />\n                </li>\n\n            </ul>\n        </nav>\n    )\n}\nexport default Nav;\n","\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Slider from './Slider';\nimport Nav from './Nav';\nimport { title } from '../globals/globalVariables';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { VscError } from 'react-icons/vsc';\nimport { useState } from 'react';\n\n\n\nconst Header = () => {\n    const location = useLocation();\n    const [burgerMenuShow, setBurgerMenuShow] = useState(true);\n\n    const toggle = () => {\n        if (burgerMenuShow === true) {\n            setBurgerMenuShow(false);\n        } else {\n            setBurgerMenuShow(true);\n        }\n    }\n\n    return (\n        <header>\n            {\n                (location.pathname === '/' || location.pathname === '/index.html' ||  location.pathname.indexOf('/sort/') > -1) && <Slider />\n            }\n            <div class='flex-column'>\n                <div className='flex-row'>\n                    <div className=\"brand\">\n                        <NavLink to=\"/\">{title}</NavLink>\n                    </div>\n                    <Nav show={true} />\n                    {burgerMenuShow === true ? (\n                        <div className='little-gap'>\n                            <GiHamburgerMenu className='burgerMenuIcon' onClick={toggle} />\n                        </div>\n                    ) : <VscError class='closeMenuIcon' onClick={toggle} />\n                    }\n                </div>\n                {burgerMenuShow === false && <Nav toggle={toggle} />}\n                \n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","const Footer = () => {\n    return (\n        <footer>\n            <p>&copy; GoMovie is created with React by Junyi(Vivi) Zeng</p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nconst tabs = [\n    {\n        text: 'Popular',\n        categoryId: 'popular'\n    }, {\n        text: 'Top Rated',\n        categoryId: 'top_rated'\n    }, {\n        text: 'Now Playing',\n        categoryId: 'now_playing'\n    }, {\n        text: 'Upcoming',\n        categoryId: 'upcoming'\n    }\n];\n\n\n\nconst backgrounds = {\n    popular : 'background1',\n    top_rated : 'background2',\n    now_playing : 'background3',\n    upcoming : 'background4',\n};\nconst NavSort = ({ categoryId = 'popular' }) => {\n\n    return (\n        <div class='place-background'>\n            <nav className='navSort'>\n                <ul>\n                    {\n                        tabs.map(tab => (\n                            <li>\n                                <NavLink to={'/sort/' + tab.categoryId}>{tab.text}</NavLink>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </nav>\n            <div className={backgrounds[categoryId]}></div>\n        </div>\n    )\n}\n\nexport default NavSort\n","export default __webpack_public_path__ + \"static/media/no-image.e550447a.jpeg\";","// Global App State\n\nconst appStorageName = 'movie';\nfunction getFavs(){\n    let favsFromStorage = localStorage.getItem(appStorageName);\n    if(favsFromStorage === null){\n        favsFromStorage = [];\n    }else{\n        favsFromStorage = JSON.parse(favsFromStorage);\n    }\n    return favsFromStorage;\n}\n\nconst actions = {\n    addFav: (objMovie) => {\n        const favs = getFavs();\n        if(favs.find(fav => fav.id === objMovie.id)) return;\n        favs.push(objMovie);\n        const newFavsForStorage = JSON.stringify(Array.from(new Set(favs)));\n        localStorage.setItem(appStorageName, newFavsForStorage);\n        return favs;\n    },\n    removeFav: (objMovie) => {\n        let favs = getFavs();\n        favs = favs.filter(fav => fav.id !== objMovie.id);\n        let favsForStorage = JSON.stringify(favs);\n        localStorage.setItem(appStorageName, favsForStorage);\n        return favs;\n    }\n}\n\nexport default {\n    getFavs,\n    actions\n};","import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport noImage from '../images/no-image.jpeg';\nimport globalAppState from '../store/globalAppState';\nimport { BiRightArrowAlt } from 'react-icons/bi';\nimport { BsFillHeartFill } from 'react-icons/bs';\nimport { BsHeart } from 'react-icons/bs';\nimport { AiFillStar } from 'react-icons/ai';\n\nfunction getIsFav(arr, id) {\n    if (arr.length === 0) {\n        return false;\n    }\n    // Checks whether the object is favourited\n    return arr.some((item) => item.id === id);\n}\nfunction MovieCard({ movieObj, onUpdate, showDetail }) {\n    const { getFavs, actions } = globalAppState;\n    const [favs, setFavs] = useState([])\n    useEffect(() => {\n        setFavs(getFavs());\n    }, []);\n    const handleSetFavs = (movieObj, isFave) => {\n        const favs = actions[isFave ? 'removeFav' : 'addFav'](movieObj);\n        setFavs(favs);\n        onUpdate && onUpdate();\n    }\n    return (\n        <div className=\"movie-card\">\n            {getIsFav(favs, movieObj.id) ?\n                <BsFillHeartFill className='float-right icon-fav' onClick={() => handleSetFavs(movieObj, true)} /> :\n                <BsHeart className='float-right icon-fav' onClick={() => handleSetFavs(movieObj, false)} />}\n            <div className=\"movie-poster\">\n                {movieObj.poster_path === null ?\n                    <img src={noImage} alt=\"No poster\" /> :\n                    <img src={`https://image.tmdb.org/t/p/w500/${movieObj.poster_path}`} alt={movieObj.title} />\n                }\n                \n                {showDetail ?\n                    <div className=\"movieInfoSection\">\n                        <div className='movieInfo'>\n                            <p className='movieTitle'>{movieObj.title}</p> \n                            <div className='flex-row'>\n                                <p>{movieObj.release_date}</p>\n                                <div className='flex-row'>\n                                    <AiFillStar className='start' />\n                                    <p>{movieObj.vote_average}</p>\n                                </div>\n                            </div>\n                            <p className='overviewTitle'>Overview:</p>\n                            <p className='overview'>{movieObj.overview}</p>\n                            <Link to={`/gomovie/movie/${movieObj.id}`} >More Info<BiRightArrowAlt /></Link>\n                        </div>\n\n                    </div> : null\n                }\n\n                <p className='movieTitle2'><Link to={`/gomovie/movie/${movieObj.id}`} >{movieObj.title}</Link></p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default MovieCard;\n","import MovieCard from \"./MovieCard\"\n\nconst Movies = ({ movieData }) => {\n    return (\n        <section className='movies-container'>\n            { movieData.map((oneMovie, i) => <MovieCard key={i} movieObj={oneMovie} showDetail/>)}\n        </section>\n    )\n}\n\nexport default Movies\n","import { useEffect, useState } from 'react';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport { API_TOKEN} from '../globals/globalVariables';\nimport { useParams, useLocation } from 'react-router-dom';\n\nfunction PageHome() {\n    const {categoryId = 'popular'} = useParams();\n\n    const [movieData, setMovieData] = useState(null);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${categoryId}?&language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + API_TOKEN\n                }\n            });\n\n            let rawMovieData = await res.json();\n            rawMovieData = rawMovieData.results.splice(0, 15);\n            setMovieData(rawMovieData);\n\n        }\n        fetchMovies();\n    }, [categoryId]);\n\n\n    return (\n        <section className=\"home-page\">\n            <NavSort categoryId={categoryId} />\n            {movieData !== null && <Movies movieData={movieData} />}\n        </section>\n    )\n}\n\nexport default PageHome;\n","const PageAbout = () => {\n    return (\n        <div className='page-about'>\n            <div className='about-content'>\n                <div className='about-gomovie-name'>About GoMovie</div>\n                <p>GoMovie is a community showing movie database. Hundreds and thousands of movies information can be found here. You can search for any movies you are interested in and you can favorite them as well. In addition, you can choose any categories of movies to explore like popular, top-rated, now playing and upcoming. All the movie data are up-to-date.</p>\n                <p>GoMovie is a React JS project for educational purposes and is created by Junyi(Vivi) Zeng. </p>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default PageAbout;\n","import { useEffect, useState } from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport globalAppState from '../store/globalAppState';\nimport MovieCard from \"../components/MovieCard\";\nimport { BsFillHeartFill } from 'react-icons/bs';\n\nconst PageFavs = () => {\n    const { getFavs } = globalAppState;\n    const [favs, setFavs] = useState([])\n    useEffect(() => {\n        setFavs(getFavs());\n    }, []);\n\n    const onUpdate = () => {\n        setFavs(getFavs());\n    }\n    return (\n        <div className='favs-Section'>\n            <p className='favs-paragraph'><BsFillHeartFill className='favs-heart'/>Your favorite movies:</p>\n            { favs.length?\n                <section className='movies-container'>\n                    {favs.map((oneMovie, i) => <MovieCard key={i} movieObj={oneMovie} onUpdate={onUpdate} />)}\n                </section> :\n                <section className='no-favs'>\n                    <p>You didn't favorite any movies, please<NavLink to='/'>select now.</NavLink></p>\n                </section>\n        \n        }\n\n        </div>\n    )\n}\n\nexport default PageFavs\n","import { useEffect, useState } from 'react'\nimport MovieCard from \"../components/MovieCard\";\nimport { BsFillHeartFill } from 'react-icons/bs';\nimport { useLocation } from 'react-router';\nimport { API_TOKEN } from '../globals/globalVariables';\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\nconst PageSearch = () => {\n    let query = useQuery();\n    const key = query.get('query');\n    const getSearch = async () => {\n        const res = await fetch(`https://api.themoviedb.org/3/search/movie?query=${key}`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + API_TOKEN\n            }\n        });\n\n        let rawMovieData = await res.json();\n        rawMovieData = rawMovieData.results.splice(0, 12);\n        setSearchResult(rawMovieData);\n    }\n    \n    const [searchResult, setSearchResult] = useState([])\n\n    useEffect(() => {\n        getSearch()\n    }, [key]);\n\n    return (\n        <div className='favs-Section'>\n            {searchResult.length ?\n                <>\n                    <p className='favs-paragraph'>We found some movies for you:</p>\n                    <section className='movies-container'>\n\n                        {searchResult.map((oneMovie, i) => <MovieCard key={i} movieObj={oneMovie} showDetail />)}\n                    </section>\n                </> :\n                <section className='no-favs'>\n                    <p>No movies found.</p>\n                </section>\n\n            }\n        </div>\n    )\n}\n\nexport default PageSearch\n","export default __webpack_public_path__ + \"static/media/no-photo.bf1d36bd.jpeg\";","import { useEffect, useState } from \"react\";\nimport noPhoto from '../images/no-photo.jpeg';\nimport { AiFillStar } from 'react-icons/ai';\nimport { BsFillHeartFill } from 'react-icons/bs';\nimport { BsHeart } from 'react-icons/bs';\nimport globalAppState from '../store/globalAppState';\nimport { API_TOKEN} from '../globals/globalVariables';\n\n\nconst SingleMovie = ({ movieObj, movieReview, fecthReview }) => {\n\n    function getIsFav(arr, id) {\n        if (arr.length === 0) {\n            return false;\n        }\n        // Checks whether the object is favourited\n        return arr.some((item) => item.id === id);\n    }\n\n    const { getFavs, actions } = globalAppState;\n    const [favs, setFavs] = useState([]);\n    const [reviews, setReviews] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPage, setTotalPage] = useState(1);\n    const [totalSize, setTotalSize] = useState(0);\n    const [currentShowSize, setCurrentShowSize] = useState(3);\n    const [video, setVideo] = useState();\n    const [similar, setSimilar] = useState();\n\n    useEffect(() => {\n        setFavs(getFavs());\n    }, []);\n\n    useEffect(() => {\n        if(!movieReview) return;\n        setReviews(reviews => {\n            return [\n                ...reviews,\n                ...movieReview.results\n            ]\n        })\n        setCurrentPage(movieReview.page);\n        setTotalPage(movieReview.total_pages);\n        setTotalSize(movieReview.total_results)\n    }, [movieReview]);\n\n    const handleSetFavs = (movieObj, isFave) => {\n        const favs = actions[isFave ? 'removeFav' : 'addFav'](movieObj);\n        setFavs(favs);\n    }\n\n    const getReviewAvatar = (review) => {\n        const avatar = review.author_details.avatar_path;\n        return avatar ? avatar.indexOf('http') > 0 ?\n            avatar.substr(1) :\n            `https://image.tmdb.org/t/p/w200/${avatar}` : 'https://avatars.dicebear.com/api/avataaars/.svg';\n    }\n\n    const loadMore = () => {\n        if(currentShowSize + 3 > reviews.length && currentPage < totalPage){\n            fecthReview(currentPage + 1)\n        }\n        setCurrentShowSize(Math.min(currentShowSize + 3, totalSize))\n    }\n\nuseEffect(() => {\n    const fetchMoviesVideo = async () => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/${movieObj.id}/videos?language=en-US&page=1`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + API_TOKEN\n            }\n        });\n\n        let rawVideoData = await res.json();\n        setVideo(rawVideoData);\n\n    }\n    if(movieObj) {\n        fetchMoviesVideo();\n    }\n    \n}, [movieObj]);\n\n/* useEffect(() => {\n    const fetchMoviesVideo = async () => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/${movieObj.id}/similar?language=en-US&page=1`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + API_TOKEN\n            }\n        });\n\n        let rawSimilarData = await res.json();\n        rawSimilarData = rawSimilarData.results.splice(0, 6);\n        setSimilar(rawSimilarData);\n\n    }\n    if(movieObj) {\n        fetchMoviesVideo();\n    }\n    \n}, [movieObj]); */\n\n    return (\n        <div>\n            <div className='single-movie'>\n                <div className='single-movie-content'>\n                    <div className='single-movie-poster'>\n                        {movieObj.poster_path == null ?\n                            <img src=\"/\" alt=\"no poster\" /> :\n                            <img src={`https://image.tmdb.org/t/p/w500/${movieObj.poster_path}`} alt={movieObj.title} />\n                        }\n                    </div>\n                    <div className='single-movie-info'>\n                        <div className='flexRow'>\n                            <p className='title'>{movieObj.title}</p>\n                            {getIsFav(favs, movieObj.id) ?\n                                <BsFillHeartFill className='icon-fav red' onClick={() => handleSetFavs(movieObj, true)} /> :\n                                <BsHeart className='icon-fav ' onClick={() => handleSetFavs(movieObj, false)} />}\n                        </div>\n                        <div className='genres'>\n                            {movieObj.genres.map((singleGenres, i) => (\n                                <ul>\n                                    <li>{singleGenres.name}</li>\n                                </ul>\n                            ))}\n                        </div>\n                        <div className=\"flexRow\">\n                            <div className='stick'>\n                                <AiFillStar className='start' />\n                                <p>{movieObj.vote_average}</p>\n                            </div>\n                            <p>{movieObj.release_date}</p>\n                        </div>\n                        <div className='line'></div>\n                        <div className='tagline'>{movieObj.tagline}</div>\n                        <p className='overview-title'>Overview</p>\n                        <p className='overview'>{movieObj.overview}</p>\n                        <div className='cast'>\n                            <p className='cast-title'>Cast &#38; Crew</p>\n                            <div className='cast-layout'>\n                                {movieObj.credits.cast.slice(0, 4).map((cast) =>\n                                    <div class='cast-detail'>\n                                        {cast.profile_path === null ? \n                                        <img src={noPhoto} alt=\"no photo\" /> :\n                                        <img src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`} alt={cast.name} />\n                                        }\n                                        <p className='cast-name'>{cast.name}</p>\n                                        <p className='cast-character'>{cast.character}</p>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {video && video.results[0] && video.results[1] &&\n            <div className='movie-video'>\n                <iframe\n                src={`https://www.youtube.com/embed/${video.results[0]?.key}?rel=0`}\n                title=\"YouTube video player\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen></iframe>\n                <iframe\n                src={`https://www.youtube.com/embed/${video.results[1]?.key}?rel=0`}\n                title=\"YouTube video player\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen></iframe>\n            </div>\n            }\n            <div className='movie-review'>\n                <div className=\"container\">\n                    <div className=\"align-center\">\n                        <p className=\"review-title\">Reviews</p>\n                    </div>\n                    {reviews.length === 0 ? \n                    <p className='no-review'>No reviews so far.</p> :\n                    <ul className=\"review-list cols-3 cols-1-xs align-center\">\n                        {\n                            reviews && reviews.slice(0, currentShowSize).map(review => {\n                                return <li> <img src={getReviewAvatar(review)} title=\"\"\n                                    alt=\"\" data-edit=\"false\" data-editor=\"field\"\n                                    data-field=\"src[Image Path]; title[Image Title]; alt[Image Alternate Text]\" />\n                                    <div className=\"reviewer-name\" contenteditable=\"false\">{review.author}</div>\n                                    <p className=\"review-content\" contenteditable=\"false\">{review.content}</p>\n                                    <div className=\"review-more\">\n                                        <a href={review.url} target=\"_blank\">view more</a>\n                                    </div>\n                                    <small\n                                        contenteditable=\"false\">{new Date(review.created_at).toLocaleDateString()}</small>\n                                </li>\n                            })\n                        }\n                    </ul>\n                    }\n                    \n                </div>\n                {\n                currentShowSize < totalSize  && <div className=\"load-more\">\n                    <a href=\"javascript:void(0)\" onClick={loadMore}>load more</a>\n                </div>\n            }\n            </div>\n            <div className='similar-movie'>\n                {similar &&\n                    similar.map((singleSimilar,i) => \n                        <div>{singleSimilar}</div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default SingleMovie;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport SingleMovie from \"../components/SingleMovie\";\nimport { API_TOKEN } from \"../globals/globalVariables\";\n\nconst PageSingleMovie = () => {\n// /movie/{movie_id}/reviews\n    const [movieData, setMovieData] = useState(null);\n    const [movieReview, setMovieReview] = useState(null);\n\n    const { id } = useParams();\n\n    const fecthMovie = async () => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US&append_to_response=videos,images,credits`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + API_TOKEN\n            }\n        });\n\n        let rawMovieData = await res.json();\n        setMovieData(rawMovieData);\n    }\n    const fecthReview = async (page=1) => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?page=${page}`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + API_TOKEN\n            }\n        });\n\n        let rawMovieReview = await res.json();\n        setMovieReview(rawMovieReview);\n    }\n    useEffect(() => {\n        fecthMovie();\n        fecthReview();\n    }, [])\n    return (\n        <div className='single-movie-page'>\n            {movieData !== null && <SingleMovie movieObj={movieData} movieReview={movieReview} fecthReview={fecthReview}/>}\n        </div>\n    )\n}\n\nexport default PageSingleMovie\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport PageHome from '../pages/PageHome';\nimport PageAbout from '../pages/PageAbout';\nimport PageFavs from '../pages/PageFavs';\nimport PageSearch from '../pages/PageSearch';\nimport PageSingleMovie from '../pages/PageSingleMovie';\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <div className=\"wrapper\">\n        <Header />\n        <main className=\"main\">\n          <Switch>\n            <Route path=\"/gomovie\" exact><PageHome /></Route>\n            <Route path=\"/gomovie/index.html\" exact><PageHome /></Route>\n            <Route path=\"/gomovie/sort/:categoryId\"><PageHome /></Route>\n            <Route path=\"/gomovie/about\"><PageAbout /></Route>\n            <Route path=\"/gomovie/favs\"><PageFavs /></Route>\n            <Route path=\"/gomovie/search\"><PageSearch /></Route>\n            <Route path=\"/gomovie/movie/:id\"><PageSingleMovie /></Route>\n          </Switch>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\nimport './styles/styles.scss';\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}